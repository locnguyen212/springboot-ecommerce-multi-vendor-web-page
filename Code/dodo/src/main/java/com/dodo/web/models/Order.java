package com.dodo.web.models;
// Generated Oct 9, 2023, 11:00:28 PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "dodo")
public class Order implements java.io.Serializable {
   
	private Integer orderId;
	private User user;
	private Shopowner shopowner;
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date orderDate;
	private Double totalAmount;
	private String shippingAddress;
	private String paymentMethod;
	private String orderStatus;
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date updatedAt;
	private String paymentStatus;
	private Set<Salesdata> salesdatas = new HashSet<Salesdata>(0);
	private Set<Orderdetail> orderdetails = new HashSet<Orderdetail>(0);
	private Set<Invoice> invoices = new HashSet<Invoice>(0);
	private Set<Ordercancellation> ordercancellations = new HashSet<Ordercancellation>(0);
  
	public Order() {
	}

	public Order(User user, Shopowner shopowner, Date orderDate, Double totalAmount, String shippingAddress, String paymentMethod,
			String orderStatus, Date updatedAt, String paymentStatus, Set<Salesdata> salesdatas, Set<Orderdetail> orderdetails, Set<Invoice> invoices,
			Set<Ordercancellation> ordercancellations) {
		this.user = user;
		this.shopowner = shopowner;
		this.orderDate = orderDate;
		this.totalAmount = totalAmount;
		this.shippingAddress = shippingAddress;
		this.paymentMethod = paymentMethod;
		this.orderStatus = orderStatus;
		this.updatedAt = updatedAt;
		this.paymentStatus = paymentStatus;
		this.salesdatas = salesdatas;
		this.orderdetails = orderdetails;
		this.invoices = invoices;
		this.ordercancellations = ordercancellations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "orderid", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shopownerid")
	public Shopowner getShopowner() {
		return this.shopowner;
	}

	public void setShopowner(Shopowner shopowner) {
		this.shopowner = shopowner;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "orderdate", length = 19)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "totalamount", precision = 10)
	public Double getTotalAmount() {
		return this.totalAmount;
	}

	public void setTotalAmount(Double totalAmount) {
		this.totalAmount = totalAmount;
	}

	@Column(name = "shippingaddress")
	public String getShippingAddress() {
		return this.shippingAddress;
	}

	public void setShippingAddress(String shippingAddress) {
		this.shippingAddress = shippingAddress;
	}

	@Column(name = "paymentmethod", length = 50)
	public String getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(String paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@Column(name = "orderstatus", length = 50)
	public String getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(String orderStatus) {
		this.orderStatus = orderStatus;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedat", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}
 
	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}
	
	@Column(name = "paymentstatus", length = 100)
	public String getPaymentStatus() {
		return this.paymentStatus;
	}

	public void setPaymentStatus(String paymentStatus) {
		this.paymentStatus = paymentStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Salesdata> getSalesdatas() {
		return this.salesdatas;
	}

	public void setSalesdatas(Set<Salesdata> salesdatas) {
		this.salesdatas = salesdatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Orderdetail> getOrderdetails() {
		return this.orderdetails;
	}

	public void setOrderdetails(Set<Orderdetail> orderdetails) {
		this.orderdetails = orderdetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Set<Invoice> invoices) {
		this.invoices = invoices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Ordercancellation> getOrdercancellations() {
		return this.ordercancellations;
	}

	public void setOrdercancellations(Set<Ordercancellation> ordercancellations) {
		this.ordercancellations = ordercancellations;
	}

	@Override
	public String toString() {
		return "Order [orderId=" + orderId + ", user=" + user + ", shopowner=" + shopowner + ", orderDate=" + orderDate
				+ ", totalAmount=" + totalAmount + ", shippingAddress=" + shippingAddress + ", paymentMethod="
				+ paymentMethod + ", orderStatus=" + orderStatus + ", paymentStatus=" + paymentStatus + "]";
	}

	
	
}
