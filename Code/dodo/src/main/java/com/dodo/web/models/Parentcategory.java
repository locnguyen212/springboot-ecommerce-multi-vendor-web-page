package com.dodo.web.models;
// Generated Oct 9, 2023, 11:00:28 PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotBlank;

/**
 * Parentcategory generated by hbm2java
 */
@Entity
@Table(name = "parentcategory", catalog = "dodo")
public class Parentcategory implements java.io.Serializable {

	private Integer parentCategoryId;
	@NotBlank
	private String parentCategoryName;
	private String parentCategoryDescription;
	private String parentCategoryImagePath;
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	private Date createdAt;
	private Date updatedAt;
	private Set<Category> categories = new HashSet<Category>(0);

	public Parentcategory() {
	}

	public Parentcategory(String parentCategoryName, String parentCategoryDescription, String parentCategoryImagePath,
			Date createdAt, Date updatedAt, Set<Category> categories) {
		this.parentCategoryName = parentCategoryName;
		this.parentCategoryDescription = parentCategoryDescription;
		this.parentCategoryImagePath = parentCategoryImagePath;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.categories = categories;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "parentcategoryid", unique = true, nullable = false)
	public Integer getParentCategoryId() {
		return this.parentCategoryId;
	}

	public void setParentCategoryId(Integer parentCategoryId) {
		this.parentCategoryId = parentCategoryId;
	}

	@Column(name = "parentcategoryname")
	public String getParentCategoryName() {
		return this.parentCategoryName;
	}

	public void setParentCategoryName(String parentCategoryName) {
		this.parentCategoryName = parentCategoryName;
	}

	@Column(name = "parentcategorydescription", length = 65535)
	public String getParentCategoryDescription() {
		return this.parentCategoryDescription;
	}

	public void setParentCategoryDescription(String parentCategoryDescription) {
		this.parentCategoryDescription = parentCategoryDescription;
	}

	@Column(name = "parentcategoryimagepath")
	public String getParentCategoryImagePath() {
		return this.parentCategoryImagePath;
	}

	public void setParentCategoryImagePath(String parentCategoryImagePath) {
		this.parentCategoryImagePath = parentCategoryImagePath;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdat", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedat", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parentcategory")
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@Override
	public String toString() {
		return "Parentcategory [parentCategoryId=" + parentCategoryId + ", parentCategoryName=" + parentCategoryName
				+ ", parentCategoryDescription=" + parentCategoryDescription + ", parentCategoryImagePath="
				+ parentCategoryImagePath + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + "]";
	}
	
	

}
