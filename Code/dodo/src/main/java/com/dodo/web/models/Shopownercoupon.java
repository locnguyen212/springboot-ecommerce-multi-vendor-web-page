package com.dodo.web.models;
// Generated Oct 9, 2023, 11:00:28 PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;

/**
 * Shopownercoupon generated by hbm2java
 */
@Entity
@Table(name = "shopownercoupon", catalog = "dodo")
public class Shopownercoupon implements java.io.Serializable {

	private Integer shopOwnerCouponId;
	private Shopowner shopowner;
	private String couponCode;	
	@Min(value = 1, message = "Discount amount must be greater than 0")
	@Max(value = 100, message = "Discount amount must be lesser than 100")
	@NotNull
	private Double discountAmount;	
	@DateTimeFormat(pattern = "dd/MM/yyyy")
	@NotNull
	private Date expiryDate;
	private Boolean isActive;
	private Date createdAt;
	private Date updatedAt;

	public Shopownercoupon() {
	}

	public Shopownercoupon(Shopowner shopowner, String couponCode, Double discountAmount, Date expiryDate,
			Boolean isActive, Date createdAt, Date updatedAt) {
		this.shopowner = shopowner;
		this.couponCode = couponCode;
		this.discountAmount = discountAmount;
		this.expiryDate = expiryDate;
		this.isActive = isActive;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "shopownercouponid", unique = true, nullable = false)
	public Integer getShopOwnerCouponId() {
		return this.shopOwnerCouponId;
	}

	public void setShopOwnerCouponId(Integer shopOwnerCouponId) {
		this.shopOwnerCouponId = shopOwnerCouponId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shopownerid")
	public Shopowner getShopowner() {
		return this.shopowner;
	}

	public void setShopowner(Shopowner shopowner) {
		this.shopowner = shopowner;
	}
    
	@Column(name = "couponcode", length = 20)
	public String getCouponCode() {
		return this.couponCode;
	}

	public void setCouponCode(String couponCode) {
		this.couponCode = couponCode;
	}

	@Column(name = "discountamount", precision = 10)
	@NotNull(message = "Discount Amount is required")
	public Double getDiscountAmount() {
		return this.discountAmount;
	}

	public void setDiscountAmount(Double discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "expirydate", length = 10)
	public Date getExpiryDate() {
		return this.expiryDate;
	}

	public void setExpiryDate(Date expiryDate) {
		this.expiryDate = expiryDate;
	}

	@Column(name = "isactive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdat", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedat", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Override
	public String toString() {
		return "Shopownercoupon [shopOwnerCouponId=" + shopOwnerCouponId + ", shopowner=" + shopowner.getOwnerId() + ", couponCode="
				+ couponCode + ", discountAmount=" + discountAmount + ", expiryDate=" + expiryDate + ", isActive="
				+ isActive + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + "]";
	}

	
}
