package com.dodo.api.models;
// Generated Oct 9, 2023, 11:00:28 PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Product generated by hbm2java
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "product")
public class Product implements java.io.Serializable {
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "productid", unique = true, nullable = false)
	private Integer productId;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoryid")
	private Category category;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shopownerid")
	private Shopowner shopowner;

	@Column(name = "productname")
	private String productName;

	@Column(name = "description", length = 65535)
	private String description;

	@Column(name = "price", precision = 10)
	private Double price;

	@Column(name = "stockquantity")
	private Integer stockQuantity;

	@Column(name = "productimage")
	private String productImage;

	@Temporal(TemporalType.DATE)
	@Column(name = "expirydate", length = 10)
	private Date expiryDate;

	@Column(name = "status")
	private Boolean status;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdat", length = 19)
	private Date createdAt;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedat", length = 19)
	private Date updatedAt;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	private Set<Review> reviews = new HashSet<Review>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	private Set<Productattribute> productattributes = new HashSet<Productattribute>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	private Set<Invoice> invoices = new HashSet<Invoice>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	private Set<Wishlist> wishlists = new HashSet<Wishlist>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	private Set<Promotion> promotions = new HashSet<Promotion>(0);


}
