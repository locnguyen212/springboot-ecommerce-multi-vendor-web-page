package com.dodo.api.models;
// Generated Oct 9, 2023, 11:00:28 PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * User generated by hbm2java
 */

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userid", unique = true, nullable = false)
	private Integer userId;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "roleid")
	private Role role;
	
	@Column(name = "username", length = 50)
	private String username;
	
	@Column(name = "password")
	private String password;
	
	@Column(name = "email")
	private String email;
	
	@Column(name = "firstname", length = 50)
	private String firstName;
	
	@Column(name = "lastname", length = 50)
	private String lastName;
	
	@Column(name = "address")
	private String address;
	
	@Column(name = "phonenumber", length = 20)
	private String phoneNumber;
	
	@Column(name = "avatar")
	private String avatar;
	
	@Column(name = "gender")
	private String gender;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	private Date dob;
	
	@Column(name = "status")
	private Boolean status;
	
	@Column(name = "token")
	private String token;
	
	@Column(name = "refreshtoken")
	private String refreshToken;
	
	@Column(name = "forgetpasswordtoken")
	private String forgetPasswordToken;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdat", length = 19)
	private Date createdAt;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedat", length = 19)
	private Date updatedAt;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Shopowner> shopowners = new HashSet<Shopowner>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Salesdata> salesdatas = new HashSet<Salesdata>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Notification> notifications = new HashSet<Notification>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Order> orders = new HashSet<Order>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Item> items = new HashSet<Item>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Wishlist> wishlists = new HashSet<Wishlist>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Invoice> invoices = new HashSet<Invoice>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Ordercancellation> ordercancellations = new HashSet<Ordercancellation>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Review> reviews = new HashSet<Review>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Category> categories = new HashSet<Category>(0);
	
}
