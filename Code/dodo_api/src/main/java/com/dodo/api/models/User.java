package com.dodo.api.models;
// Generated Oct 9, 2023, 11:00:28 PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * User generated by hbm2java
 */

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userid", unique = true, nullable = false)
	private Integer userId;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "roleid")
	private Role role;
	@Column(name = "username", length = 50)
	private String username;
	@Column(name = "password")
	private String password;
	@Column(name = "email")
	private String email;
	@Column(name = "firstname", length = 50)
	private String firstName;
	@Column(name = "lastname", length = 50)
	private String lastName;
	@Column(name = "address")
	private String address;
	@Column(name = "phonenumber", length = 20)
	private String phoneNumber;
	@Column(name = "avatar")
	private String avatar;
	@Column(name = "gender")
	private String gender;
	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	private Date dob;
	@Column(name = "status")
	private Boolean status;
	@Column(name = "token")
	private String token;
	@Column(name = "refreshtoken")
	private String refreshToken;
	@Column(name = "forgetpasswordtoken")
	private String forgetPasswordToken;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdat", length = 19)
	private Date createdAt;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedat", length = 19)
	private Date updatedAt;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Shopowner> shopowners = new HashSet<Shopowner>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Salesdata> salesdatas = new HashSet<Salesdata>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Notification> notifications = new HashSet<Notification>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Order> orders = new HashSet<Order>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Item> items = new HashSet<Item>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Wishlist> wishlists = new HashSet<Wishlist>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Invoice> invoices = new HashSet<Invoice>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Ordercancellation> ordercancellations = new HashSet<Ordercancellation>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Review> reviews = new HashSet<Review>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	private Set<Category> categories = new HashSet<Category>(0);

//	public User() {
//	}
//
//	public User(Role role, String username, String password, String email, String firstName, String lastName,
//			String address, String phoneNumber, String avatar, String gender, Date dob, Boolean status, String token,
//			String refreshToken, String forgetPasswordToken, Date createdAt, Date updatedAt, Set<Shopowner> shopowners,
//			Set<Salesdata> salesdatas, Set<Notification> notifications, Set<Order> orders, Set<Item> items,
//			Set<Wishlist> wishlists, Set<Invoice> invoices, Set<Ordercancellation> ordercancellations,
//			Set<Review> reviews, Set<Category> categories) {
//		this.role = role;
//		this.username = username;
//		this.password = password;
//		this.email = email;
//		this.firstName = firstName;
//		this.lastName = lastName;
//		this.address = address;
//		this.phoneNumber = phoneNumber;
//		this.avatar = avatar;
//		this.gender = gender;
//		this.dob = dob;
//		this.createdAt = createdAt;
//		this.updatedAt = updatedAt;
//		this.status = status;
//		this.token = token;
//		this.refreshToken = refreshToken;
//		this.forgetPasswordToken = forgetPasswordToken;
//		this.shopowners = shopowners;
//		this.salesdatas = salesdatas;
//		this.notifications = notifications;
//		this.orders = orders;
//		this.items = items;
//		this.wishlists = wishlists;
//		this.invoices = invoices;
//		this.ordercancellations = ordercancellations;
//		this.reviews = reviews;
//		this.categories = categories;
//	}
//
//	@Id
//	@GeneratedValue(strategy = IDENTITY)
//	@Column(name = "userid", unique = true, nullable = false)
//	public Integer getUserId() {
//		return this.userId;
//	}
//
//	public void setUserId(Integer userId) {
//		this.userId = userId;
//	}
//
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "roleid")
//	public Role getRole() {
//		return this.role;
//	}
//
//	public void setRole(Role role) {
//		this.role = role;
//	}
//
//	@Column(name = "username", length = 50)
//	public String getUsername() {
//		return this.username;
//	}
//
//	public void setUsername(String username) {
//		this.username = username;
//	}
//
//	@Column(name = "password")
//	public String getPassword() {
//		return this.password;
//	}
//
//	public void setPassword(String password) {
//		this.password = password;
//	}
//
//	@Column(name = "email")
//	public String getEmail() {
//		return this.email;
//	}
//
//	public void setEmail(String email) {
//		this.email = email;
//	}
//
//	@Column(name = "firstname", length = 50)
//	public String getFirstName() {
//		return this.firstName;
//	}
//
//	public void setFirstName(String firstName) {
//		this.firstName = firstName;
//	}
//
//	@Column(name = "lastname", length = 50)
//	public String getLastName() {
//		return this.lastName;
//	}
//
//	public void setLastName(String lastName) {
//		this.lastName = lastName;
//	}
//
//	@Column(name = "address")
//	public String getAddress() {
//		return this.address;
//	}
//
//	public void setAddress(String address) {
//		this.address = address;
//	}
//
//	@Column(name = "phonenumber", length = 20)
//	public String getPhoneNumber() {
//		return this.phoneNumber;
//	}
//
//	public void setPhoneNumber(String phoneNumber) {
//		this.phoneNumber = phoneNumber;
//	}
//
//	@Column(name = "avatar")
//	public String getAvatar() {
//		return this.avatar;
//	}
//
//	public void setAvatar(String avatar) {
//		this.avatar = avatar;
//	}
//
//	@Column(name = "gender")
//	public String getGender() {
//		return this.gender;
//	}
//
//	public void setGender(String gender) {
//		this.gender = gender;
//	}
//
//	@Temporal(TemporalType.DATE)
//	@Column(name = "dob", length = 10)
//	public Date getDob() {
//		return this.dob;
//	}
//
//	public void setDob(Date dob) {
//		this.dob = dob;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "createdat", length = 19)
//	public Date getCreatedAt() {
//		return this.createdAt;
//	}
//
//	public void setCreatedAt(Date createdAt) {
//		this.createdAt = createdAt;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "updatedat", length = 19)
//	public Date getUpdatedAt() {
//		return this.updatedAt;
//	}
//
//	public void setUpdatedAt(Date updatedAt) {
//		this.updatedAt = updatedAt;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Shopowner> getShopowners() {
//		return this.shopowners;
//	}
//
//	public void setShopowners(Set<Shopowner> shopowners) {
//		this.shopowners = shopowners;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Salesdata> getSalesdatas() {
//		return this.salesdatas;
//	}
//
//	public void setSalesdatas(Set<Salesdata> salesdatas) {
//		this.salesdatas = salesdatas;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Notification> getNotifications() {
//		return this.notifications;
//	}
//
//	public void setNotifications(Set<Notification> notifications) {
//		this.notifications = notifications;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Order> getOrders() {
//		return this.orders;
//	}
//
//	public void setOrders(Set<Order> orders) {
//		this.orders = orders;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Item> getItems() {
//		return this.items;
//	}
//
//	public void setItems(Set<Item> items) {
//		this.items = items;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Wishlist> getWishlists() {
//		return this.wishlists;
//	}
//
//	public void setWishlists(Set<Wishlist> wishlists) {
//		this.wishlists = wishlists;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Invoice> getInvoices() {
//		return this.invoices;
//	}
//
//	public void setInvoices(Set<Invoice> invoices) {
//		this.invoices = invoices;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Ordercancellation> getOrdercancellations() {
//		return this.ordercancellations;
//	}
//
//	public void setOrdercancellations(Set<Ordercancellation> ordercancellations) {
//		this.ordercancellations = ordercancellations;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Review> getReviews() {
//		return this.reviews;
//	}
//
//	public void setReviews(Set<Review> reviews) {
//		this.reviews = reviews;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
//	public Set<Category> getCategories() {
//		return this.categories;
//	}
//
//	public void setCategories(Set<Category> categories) {
//		this.categories = categories;
//	}
//
//	@Column(name = "status")
//	public Boolean getStatus() {
//		return status;
//	}
//
//	public void setStatus(Boolean status) {
//		this.status = status;
//	}
//
//	@Column(name = "token")
//	public String getToken() {
//		return token;
//	}
//
//	public void setToken(String token) {
//		this.token = token;
//	}
//
//	@Column(name = "refreshtoken")
//	public String getRefreshToken() {
//		return refreshToken;
//	}
//
//	public void setRefreshToken(String refreshToken) {
//		this.refreshToken = refreshToken;
//	}
//
//	@Column(name = "forgetpasswordtoken")
//	public String getForgetPasswordToken() {
//		return forgetPasswordToken;
//	}
//
//	public void setForgetPasswordToken(String forgetPasswordToken) {
//		this.forgetPasswordToken = forgetPasswordToken;
//	}

	@Override
	public String toString() {
		return "User [userId=" + userId + ", role=" + role + ", username=" + username + ", password=" + password
				+ ", email=" + email + ", firstName=" + firstName + ", lastName=" + lastName + ", address=" + address
				+ ", phoneNumber=" + phoneNumber + ", avatar=" + avatar + ", gender=" + gender + ", dob=" + dob
				+ ", status=" + status + ", token=" + token + ", refreshToken=" + refreshToken + ", createdAt="
				+ createdAt + ", updatedAt=" + updatedAt + "]";
	}

}
